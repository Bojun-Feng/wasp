app authModelExperiment {
  wasp: {
    version: "^0.11.8"
  },
  title: "auth-model-experiment",
  auth: {
    userEntity: User,
    methods: {
      google: {
        // getUserFieldsFn: import { getUserFields } from "@server/google.js",
        // configFn: import { getGoogleConfig } from "@server/google.js",
      },
      // usernameAndPassword: {},
      email: {
        fromField: {
          name: "ToDO App",
          email: "mihovil@ilakovac.com"
        },
        emailVerification: {
          clientRoute: EmailVerificationRoute,
        },
        passwordReset: {
          clientRoute: PasswordResetRoute
        },
        allowUnverifiedLogin: false,
      },
    },
    onAuthFailedRedirectTo: "/login"
  },
  emailSender: {
    provider: SMTP,
    defaultFrom: {
      email: "mihovil@ilakovac.com"
    },
  },
}

entity User {=psl
  id String @id @default(uuid())
  // TODO: figure out how to pass data from all auth methods
  // We have now - additional signup fields + Social providers setup
  // The data goes to the User (custom stuff)
  email String?
  tasks Task[]
psl=}

entity Task {=psl
  id Int @id @default(autoincrement())
  title String
  userId String
  user User @relation(fields: [userId], references: [id])
psl=}

crud tasks {
  entity: Task,
  operations: {
    get: {},
    getAll: {
      overrideFn: import { getAllTasks } from "@server/tasks.js",
    },
    create: {
      overrideFn: import { createTask } from "@server/tasks.js",
    },
    update: {},
    delete: {},
  },
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import Main from "@client/MainPage.tsx"
}

route LoginRoute { path: "/login", to: Login }
page Login {
  component: import { Login } from "@client/auth.jsx"
}

route SignupRoute { path: "/signup", to: Signup }
page Signup {
  component: import { Signup } from "@client/auth.jsx"
}

route PasswordResetRoute { path: "/password-reset", to: PasswordResetPage }
page PasswordResetPage {
  component: import { PasswordReset } from "@client/auth.jsx",
}

route EmailVerificationRoute { path: "/email-verification-", to: EmailVerificationPage }
page EmailVerificationPage {
  component: import { EmailVerification } from "@client/auth.jsx",
}

route RequestPasswordResetRoute { path: "/request-password-reset", to: RequestPasswordReset }
page RequestPasswordReset {
  component: import { RequestPasswordReset  } from "@client/auth.jsx"
}

route DetailRoute { path: "/:id/:something?", to: DetailPage }
page DetailPage {
  component: import Main from "@client/DetailPage.tsx",
  authRequired: true,
}