
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output = env("PRISMA_CLIENT_OUTPUT_DIR")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  externalAuthAssociations SocialLogin[]
  auth Auth?

}
model SocialLogin {
  id Int @id @default(autoincrement())
  provider String
  providerId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  createdAt DateTime @default(now())
  @@unique([provider, providerId, userId])

}
model Task {
  id Int @id @default(autoincrement())
  description String
  isDone Boolean @default(false)

}
model Auth {
  id String @id @default(uuid())
  email String? @unique
  username String? @unique
  password String?
  isEmailVerified Boolean @default(false)
  emailVerificationSentAt DateTime?
  passwordResetSentAt DateTime?
  userId Int? @unique
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  providers SocialAuthProvider[]

}
model SocialAuthProvider {
  id String @id @default(uuid())
  provider String
  providerId String
  authId String
  auth Auth @relation(fields: [authId], references: [id], onDelete: Cascade)

}
